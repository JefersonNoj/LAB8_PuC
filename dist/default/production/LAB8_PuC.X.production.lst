

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sat Apr 23 18:05:45 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.40
    24                           ; Generated 17/11/2021 GMT
    25                           ; 
    26                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0008                     _PORTDbits	set	8
   215  0007                     _PORTCbits	set	7
   216  0008                     _PORTD	set	8
   217  0007                     _PORTC	set	7
   218  0005                     _PORTA	set	5
   219  0001                     _TMR0	set	1
   220  000B                     _INTCONbits	set	11
   221  001E                     _ADRESH	set	30
   222  0006                     _PORTB	set	6
   223  001F                     _ADCON0bits	set	31
   224  000C                     _PIR1bits	set	12
   225  008C                     _PIE1bits	set	140
   226  009F                     _ADCON1bits	set	159
   227  0081                     _OPTION_REGbits	set	129
   228  0088                     _TRISD	set	136
   229  0087                     _TRISC	set	135
   230  0086                     _TRISB	set	134
   231  0085                     _TRISA	set	133
   232  008F                     _OSCCONbits	set	143
   233  0189                     _ANSELH	set	393
   234  0188                     _ANSEL	set	392
   235                           
   236                           	psect	cinit
   237  000F                     start_initialization:	
   238                           ; #config settings
   239                           
   240  000F                     __initialization:
   241                           
   242                           ; Clear objects allocated to COMMON
   243  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   244                           
   245                           ; Clear objects allocated to BANK0
   246  0010  1283               	bcf	3,5	;RP0=0, select bank0
   247  0011  1303               	bcf	3,6	;RP1=0, select bank0
   248  0012  01AC               	clrf	__pbssBANK0& (0+127)
   249  0013  01AD               	clrf	(__pbssBANK0+1)& (0+127)
   250  0014  01AE               	clrf	(__pbssBANK0+2)& (0+127)
   251  0015  01AF               	clrf	(__pbssBANK0+3)& (0+127)
   252  0016  01B0               	clrf	(__pbssBANK0+4)& (0+127)
   253  0017  01B1               	clrf	(__pbssBANK0+5)& (0+127)
   254  0018  01B2               	clrf	(__pbssBANK0+6)& (0+127)
   255  0019  01B3               	clrf	(__pbssBANK0+7)& (0+127)
   256  001A  01B4               	clrf	(__pbssBANK0+8)& (0+127)
   257  001B                     end_of_initialization:	
   258                           ;End of C runtime variable initialization code
   259                           
   260  001B                     __end_of__initialization:
   261  001B  0183               	clrf	3
   262  001C  120A  118A  2AAA   	ljmp	_main	;jump to C main() function
   263                           
   264                           	psect	bssCOMMON
   265  0078                     __pbssCOMMON:
   266  0078                     _selector:
   267  0078                     	ds	1
   268                           
   269                           	psect	bssBANK0
   270  002C                     __pbssBANK0:
   271  002C                     _centenas:
   272  002C                     	ds	2
   273  002E                     _decenas:
   274  002E                     	ds	2
   275  0030                     _unidades:
   276  0030                     	ds	2
   277  0032                     _valor:
   278  0032                     	ds	2
   279  0034                     _valor_tabla:
   280  0034                     	ds	1
   281                           
   282                           	psect	cstackCOMMON
   283  0070                     __pcstackCOMMON:
   284  0070                     ?_setup:
   285  0070                     ?_multiplexado:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0070                     ?_isr:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ?_main:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     ?_map:	
   295                           ; 1 bytes @ 0x0
   296                           
   297                           
   298                           ; 2 bytes @ 0x0
   299  0070                     	ds	2
   300  0072                     ??_map:
   301                           
   302                           ; 1 bytes @ 0x2
   303  0072                     	ds	2
   304  0074                     map@val:
   305                           
   306                           ; 1 bytes @ 0x4
   307  0074                     	ds	1
   308  0075                     ??_isr:
   309                           
   310                           ; 1 bytes @ 0x5
   311  0075                     	ds	3
   312                           
   313                           	psect	cstackBANK0
   314  0020                     __pcstackBANK0:
   315  0020                     ??_setup:
   316  0020                     ?_tabla_7seg:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0020                     ?___awdiv:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0020                     ?___awmod:	
   323                           ; 2 bytes @ 0x0
   324                           
   325  0020                     tabla_7seg@decimal:	
   326                           ; 2 bytes @ 0x0
   327                           
   328  0020                     ___awdiv@divisor:	
   329                           ; 2 bytes @ 0x0
   330                           
   331  0020                     ___awmod@divisor:	
   332                           ; 2 bytes @ 0x0
   333                           
   334                           
   335                           ; 2 bytes @ 0x0
   336  0020                     	ds	2
   337  0022                     ??_tabla_7seg:
   338  0022                     ___awdiv@dividend:	
   339                           ; 1 bytes @ 0x2
   340                           
   341  0022                     ___awmod@dividend:	
   342                           ; 2 bytes @ 0x2
   343                           
   344                           
   345                           ; 2 bytes @ 0x2
   346  0022                     	ds	1
   347  0023                     ??_multiplexado:
   348                           
   349                           ; 1 bytes @ 0x3
   350  0023                     	ds	1
   351  0024                     ??___awdiv:
   352  0024                     ??___awmod:	
   353                           ; 1 bytes @ 0x4
   354                           
   355                           
   356                           ; 1 bytes @ 0x4
   357  0024                     	ds	1
   358  0025                     multiplexado@selector:
   359  0025                     ___awdiv@counter:	
   360                           ; 1 bytes @ 0x5
   361                           
   362  0025                     ___awmod@counter:	
   363                           ; 1 bytes @ 0x5
   364                           
   365                           
   366                           ; 1 bytes @ 0x5
   367  0025                     	ds	1
   368  0026                     ___awdiv@sign:
   369  0026                     ___awmod@sign:	
   370                           ; 1 bytes @ 0x6
   371                           
   372                           
   373                           ; 1 bytes @ 0x6
   374  0026                     	ds	1
   375  0027                     ___awdiv@quotient:
   376                           
   377                           ; 2 bytes @ 0x7
   378  0027                     	ds	2
   379  0029                     ?_obtener_decimal:
   380  0029                     obtener_decimal@valor:	
   381                           ; 1 bytes @ 0x9
   382                           
   383                           
   384                           ; 2 bytes @ 0x9
   385  0029                     	ds	2
   386  002B                     ??_obtener_decimal:
   387  002B                     ??_main:	
   388                           ; 1 bytes @ 0xB
   389                           
   390                           
   391                           ; 1 bytes @ 0xB
   392  002B                     	ds	1
   393                           
   394                           	psect	maintext
   395  02AA                     __pmaintext:	
   396 ;;
   397 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   398 ;;
   399 ;; *************** function _main *****************
   400 ;; Defined at:
   401 ;;		line 77 in file "mainL8.c"
   402 ;; Parameters:    Size  Location     Type
   403 ;;		None
   404 ;; Auto vars:     Size  Location     Type
   405 ;;		None
   406 ;; Return value:  Size  Location     Type
   407 ;;                  1    wreg      void 
   408 ;; Registers used:
   409 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   410 ;; Tracked objects:
   411 ;;		On entry : B00/0
   412 ;;		On exit  : 0/0
   413 ;;		Unchanged: 0/0
   414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   415 ;;      Params:         0       0       0       0       0
   416 ;;      Locals:         0       0       0       0       0
   417 ;;      Temps:          0       1       0       0       0
   418 ;;      Totals:         0       1       0       0       0
   419 ;;Total ram usage:        1 bytes
   420 ;; Hardware stack levels required when called: 4
   421 ;; This function calls:
   422 ;;		_multiplexado
   423 ;;		_obtener_decimal
   424 ;;		_setup
   425 ;; This function is called by:
   426 ;;		Startup code after reset
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430  02AA                     _main:	
   431                           ;psect for function _main
   432                           
   433  02AA                     l1275:	
   434                           ;incstack = 0
   435                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   436                           
   437                           
   438                           ;mainL8.c: 78:     setup();
   439  02AA  120A  118A  21CA  120A  118A  	fcall	_setup
   440  02AF                     l1277:
   441                           
   442                           ;mainL8.c: 80:         if(ADCON0bits.GO == 0){
   443  02AF  1283               	bcf	3,5	;RP0=0, select bank0
   444  02B0  1303               	bcf	3,6	;RP1=0, select bank0
   445  02B1  189F               	btfsc	31,1	;volatile
   446  02B2  2AB4               	goto	u581
   447  02B3  2AB5               	goto	u580
   448  02B4                     u581:
   449  02B4  2AD8               	goto	l1291
   450  02B5                     u580:
   451  02B5                     l1279:
   452                           
   453                           ;mainL8.c: 81:             if(ADCON0bits.CHS == 0)
   454  02B5  0C1F               	rrf	31,w	;volatile
   455  02B6  00AB               	movwf	??_main
   456  02B7  0C2B               	rrf	??_main,w
   457  02B8  390F               	andlw	15
   458  02B9  3A00               	xorlw	0
   459  02BA  1D03               	skipz
   460  02BB  2ABD               	goto	u591
   461  02BC  2ABE               	goto	u590
   462  02BD                     u591:
   463  02BD  2AC3               	goto	l1283
   464  02BE                     u590:
   465  02BE                     l1281:
   466                           
   467                           ;mainL8.c: 82:                 ADCON0bits.CHS = 0b0001;
   468  02BE  081F               	movf	31,w	;volatile
   469  02BF  39C3               	andlw	-61
   470  02C0  3804               	iorlw	4
   471  02C1  009F               	movwf	31	;volatile
   472  02C2  2ACE               	goto	l1287
   473  02C3                     l1283:
   474  02C3  0C1F               	rrf	31,w	;volatile
   475  02C4  00AB               	movwf	??_main
   476  02C5  0C2B               	rrf	??_main,w
   477  02C6  390F               	andlw	15
   478  02C7  3A01               	xorlw	1
   479  02C8  1D03               	skipz
   480  02C9  2ACB               	goto	u601
   481  02CA  2ACC               	goto	u600
   482  02CB                     u601:
   483  02CB  2ACE               	goto	l1287
   484  02CC                     u600:
   485  02CC                     l1285:
   486                           
   487                           ;mainL8.c: 84:                 ADCON0bits.CHS = 0b0000;
   488  02CC  30C3               	movlw	-61
   489  02CD  059F               	andwf	31,f	;volatile
   490  02CE                     l1287:
   491                           
   492                           ;mainL8.c: 85:             _delay((unsigned long)((40)*(4000000/4000000.0)));
   493  02CE  300C               	movlw	12
   494  02CF  1283               	bcf	3,5	;RP0=0, select bank0
   495  02D0  1303               	bcf	3,6	;RP1=0, select bank0
   496  02D1  00AB               	movwf	??_main
   497  02D2                     u617:
   498  02D2  0BAB               	decfsz	??_main,f
   499  02D3  2AD2               	goto	u617
   500  02D4  0000               	nop
   501  02D5                     l1289:
   502                           
   503                           ;mainL8.c: 86:             ADCON0bits.GO = 1;
   504  02D5  1283               	bcf	3,5	;RP0=0, select bank0
   505  02D6  1303               	bcf	3,6	;RP1=0, select bank0
   506  02D7  149F               	bsf	31,1	;volatile
   507  02D8                     l1291:
   508                           
   509                           ;mainL8.c: 88:         obtener_decimal(valor);
   510  02D8  0833               	movf	_valor+1,w
   511  02D9  00AA               	movwf	obtener_decimal@valor+1
   512  02DA  0832               	movf	_valor,w
   513  02DB  00A9               	movwf	obtener_decimal@valor
   514  02DC  120A  118A  201F  120A  118A  	fcall	_obtener_decimal
   515  02E1                     l1293:
   516                           
   517                           ;mainL8.c: 89:         multiplexado(selector);
   518  02E1  0878               	movf	_selector,w
   519  02E2  120A  118A  221D  120A  118A  	fcall	_multiplexado
   520  02E7  2AAF               	goto	l1277
   521  02E8  120A  118A  280C   	ljmp	start
   522  02EB                     __end_of_main:
   523                           
   524                           	psect	text1
   525  01CA                     __ptext1:	
   526 ;; *************** function _setup *****************
   527 ;; Defined at:
   528 ;;		line 95 in file "mainL8.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;		None
   531 ;; Auto vars:     Size  Location     Type
   532 ;;		None
   533 ;; Return value:  Size  Location     Type
   534 ;;                  1    wreg      void 
   535 ;; Registers used:
   536 ;;		wreg, status,2, status,0
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   542 ;;      Params:         0       0       0       0       0
   543 ;;      Locals:         0       0       0       0       0
   544 ;;      Temps:          0       1       0       0       0
   545 ;;      Totals:         0       1       0       0       0
   546 ;;Total ram usage:        1 bytes
   547 ;; Hardware stack levels used: 1
   548 ;; Hardware stack levels required when called: 2
   549 ;; This function calls:
   550 ;;		Nothing
   551 ;; This function is called by:
   552 ;;		_main
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556  01CA                     _setup:	
   557                           ;psect for function _setup
   558                           
   559  01CA                     l1145:	
   560                           ;incstack = 0
   561                           ; Regs used in _setup: [wreg+status,2+status,0]
   562                           
   563                           
   564                           ;mainL8.c: 97:     OSCCONbits.IRCF = 0b0110;
   565  01CA  1683               	bsf	3,5	;RP0=1, select bank1
   566  01CB  1303               	bcf	3,6	;RP1=0, select bank1
   567  01CC  080F               	movf	15,w	;volatile
   568  01CD  398F               	andlw	-113
   569  01CE  3860               	iorlw	96
   570  01CF  008F               	movwf	15	;volatile
   571  01D0                     l1147:
   572                           
   573                           ;mainL8.c: 98:     OSCCONbits.SCS = 1;
   574  01D0  140F               	bsf	15,0	;volatile
   575  01D1                     l1149:
   576                           
   577                           ;mainL8.c: 100:     ANSEL = 0b00000011;
   578  01D1  3003               	movlw	3
   579  01D2  1683               	bsf	3,5	;RP0=1, select bank3
   580  01D3  1703               	bsf	3,6	;RP1=1, select bank3
   581  01D4  0088               	movwf	8	;volatile
   582  01D5                     l1151:
   583                           
   584                           ;mainL8.c: 101:     ANSELH = 0;
   585  01D5  0189               	clrf	9	;volatile
   586  01D6                     l1153:
   587                           
   588                           ;mainL8.c: 102:     TRISA = 0b00000011;
   589  01D6  3003               	movlw	3
   590  01D7  1683               	bsf	3,5	;RP0=1, select bank1
   591  01D8  1303               	bcf	3,6	;RP1=0, select bank1
   592  01D9  0085               	movwf	5	;volatile
   593  01DA                     l1155:
   594                           
   595                           ;mainL8.c: 103:     PORTA = 0;
   596  01DA  1283               	bcf	3,5	;RP0=0, select bank0
   597  01DB  1303               	bcf	3,6	;RP1=0, select bank0
   598  01DC  0185               	clrf	5	;volatile
   599  01DD                     l1157:
   600                           
   601                           ;mainL8.c: 104:     TRISB = 0;
   602  01DD  1683               	bsf	3,5	;RP0=1, select bank1
   603  01DE  1303               	bcf	3,6	;RP1=0, select bank1
   604  01DF  0186               	clrf	6	;volatile
   605  01E0                     l1159:
   606                           
   607                           ;mainL8.c: 105:     PORTB = 0;
   608  01E0  1283               	bcf	3,5	;RP0=0, select bank0
   609  01E1  1303               	bcf	3,6	;RP1=0, select bank0
   610  01E2  0186               	clrf	6	;volatile
   611  01E3                     l1161:
   612                           
   613                           ;mainL8.c: 106:     TRISC = 0;
   614  01E3  1683               	bsf	3,5	;RP0=1, select bank1
   615  01E4  1303               	bcf	3,6	;RP1=0, select bank1
   616  01E5  0187               	clrf	7	;volatile
   617  01E6                     l1163:
   618                           
   619                           ;mainL8.c: 107:     PORTC = 0;
   620  01E6  1283               	bcf	3,5	;RP0=0, select bank0
   621  01E7  1303               	bcf	3,6	;RP1=0, select bank0
   622  01E8  0187               	clrf	7	;volatile
   623  01E9                     l1165:
   624                           
   625                           ;mainL8.c: 108:     TRISD = 0;
   626  01E9  1683               	bsf	3,5	;RP0=1, select bank1
   627  01EA  1303               	bcf	3,6	;RP1=0, select bank1
   628  01EB  0188               	clrf	8	;volatile
   629  01EC                     l1167:
   630                           
   631                           ;mainL8.c: 109:     PORTD = 0;
   632  01EC  1283               	bcf	3,5	;RP0=0, select bank0
   633  01ED  1303               	bcf	3,6	;RP1=0, select bank0
   634  01EE  0188               	clrf	8	;volatile
   635  01EF                     l1169:
   636                           
   637                           ;mainL8.c: 111:     OPTION_REGbits.T0CS = 0;
   638  01EF  1683               	bsf	3,5	;RP0=1, select bank1
   639  01F0  1303               	bcf	3,6	;RP1=0, select bank1
   640  01F1  1281               	bcf	1,5	;volatile
   641  01F2                     l1171:
   642                           
   643                           ;mainL8.c: 112:     OPTION_REGbits.PSA = 0;
   644  01F2  1181               	bcf	1,3	;volatile
   645                           
   646                           ;mainL8.c: 113:     OPTION_REGbits.PS = 0b111;
   647  01F3  3007               	movlw	7
   648  01F4  0481               	iorwf	1,f	;volatile
   649  01F5                     l1173:
   650                           
   651                           ;mainL8.c: 114:     TMR0 = 236;
   652  01F5  30EC               	movlw	236
   653  01F6  1283               	bcf	3,5	;RP0=0, select bank0
   654  01F7  1303               	bcf	3,6	;RP1=0, select bank0
   655  01F8  0081               	movwf	1	;volatile
   656  01F9                     l1175:
   657                           
   658                           ;mainL8.c: 116:     ADCON0bits.ADCS =0b01;
   659  01F9  081F               	movf	31,w	;volatile
   660  01FA  393F               	andlw	-193
   661  01FB  3840               	iorlw	64
   662  01FC  009F               	movwf	31	;volatile
   663  01FD                     l1177:
   664                           
   665                           ;mainL8.c: 117:     ADCON1bits.VCFG0 = 0;
   666  01FD  1683               	bsf	3,5	;RP0=1, select bank1
   667  01FE  1303               	bcf	3,6	;RP1=0, select bank1
   668  01FF  121F               	bcf	31,4	;volatile
   669  0200                     l1179:
   670                           
   671                           ;mainL8.c: 118:     ADCON1bits.VCFG1 = 0;
   672  0200  129F               	bcf	31,5	;volatile
   673  0201                     l1181:
   674                           
   675                           ;mainL8.c: 119:     ADCON0bits.CHS = 0b0000;
   676  0201  30C3               	movlw	-61
   677  0202  1283               	bcf	3,5	;RP0=0, select bank0
   678  0203  1303               	bcf	3,6	;RP1=0, select bank0
   679  0204  059F               	andwf	31,f	;volatile
   680  0205                     l1183:
   681                           
   682                           ;mainL8.c: 120:     ADCON1bits.ADFM = 0;
   683  0205  1683               	bsf	3,5	;RP0=1, select bank1
   684  0206  1303               	bcf	3,6	;RP1=0, select bank1
   685  0207  139F               	bcf	31,7	;volatile
   686  0208                     l1185:
   687                           
   688                           ;mainL8.c: 121:     ADCON0bits.ADON = 1;
   689  0208  1283               	bcf	3,5	;RP0=0, select bank0
   690  0209  1303               	bcf	3,6	;RP1=0, select bank0
   691  020A  141F               	bsf	31,0	;volatile
   692  020B                     l1187:
   693                           
   694                           ;mainL8.c: 122:     _delay((unsigned long)((40)*(4000000/4000000.0)));
   695  020B  300C               	movlw	12
   696  020C  1283               	bcf	3,5	;RP0=0, select bank0
   697  020D  1303               	bcf	3,6	;RP1=0, select bank0
   698  020E  00A0               	movwf	??_setup
   699  020F                     u627:
   700  020F  0BA0               	decfsz	??_setup,f
   701  0210  2A0F               	goto	u627
   702  0211  0000               	nop
   703  0212                     l1189:
   704                           
   705                           ;mainL8.c: 124:     INTCONbits.GIE = 1;
   706  0212  178B               	bsf	11,7	;volatile
   707  0213                     l1191:
   708                           
   709                           ;mainL8.c: 125:     INTCONbits.PEIE = 1;
   710  0213  170B               	bsf	11,6	;volatile
   711  0214                     l1193:
   712                           
   713                           ;mainL8.c: 126:     INTCONbits.T0IE = 1;
   714  0214  168B               	bsf	11,5	;volatile
   715  0215                     l1195:
   716                           
   717                           ;mainL8.c: 127:     INTCONbits.T0IF = 0;
   718  0215  110B               	bcf	11,2	;volatile
   719  0216                     l1197:
   720                           
   721                           ;mainL8.c: 128:     PIE1bits.ADIE = 1;
   722  0216  1683               	bsf	3,5	;RP0=1, select bank1
   723  0217  1303               	bcf	3,6	;RP1=0, select bank1
   724  0218  170C               	bsf	12,6	;volatile
   725  0219                     l1199:
   726                           
   727                           ;mainL8.c: 129:     PIR1bits.ADIF = 0;
   728  0219  1283               	bcf	3,5	;RP0=0, select bank0
   729  021A  1303               	bcf	3,6	;RP1=0, select bank0
   730  021B  130C               	bcf	12,6	;volatile
   731  021C                     l93:
   732  021C  0008               	return
   733  021D                     __end_of_setup:
   734                           
   735                           	psect	text2
   736  001F                     __ptext2:	
   737 ;; *************** function _obtener_decimal *****************
   738 ;; Defined at:
   739 ;;		line 140 in file "mainL8.c"
   740 ;; Parameters:    Size  Location     Type
   741 ;;  valor           2    9[BANK0 ] int 
   742 ;; Auto vars:     Size  Location     Type
   743 ;;		None
   744 ;; Return value:  Size  Location     Type
   745 ;;                  1    wreg      void 
   746 ;; Registers used:
   747 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   748 ;; Tracked objects:
   749 ;;		On entry : 0/0
   750 ;;		On exit  : 0/0
   751 ;;		Unchanged: 0/0
   752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   753 ;;      Params:         0       2       0       0       0
   754 ;;      Locals:         0       0       0       0       0
   755 ;;      Temps:          0       0       0       0       0
   756 ;;      Totals:         0       2       0       0       0
   757 ;;Total ram usage:        2 bytes
   758 ;; Hardware stack levels used: 1
   759 ;; Hardware stack levels required when called: 3
   760 ;; This function calls:
   761 ;;		___awdiv
   762 ;;		___awmod
   763 ;; This function is called by:
   764 ;;		_main
   765 ;; This function uses a non-reentrant model
   766 ;;
   767                           
   768  001F                     _obtener_decimal:	
   769                           ;psect for function _obtener_decimal
   770                           
   771  001F                     l1203:	
   772                           ;incstack = 0
   773                           ; Regs used in _obtener_decimal: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   774                           
   775                           
   776                           ;mainL8.c: 141:     centenas = 0;
   777  001F  1283               	bcf	3,5	;RP0=0, select bank0
   778  0020  1303               	bcf	3,6	;RP1=0, select bank0
   779  0021  01AC               	clrf	_centenas
   780  0022  01AD               	clrf	_centenas+1
   781                           
   782                           ;mainL8.c: 142:     decenas = 0;
   783  0023  01AE               	clrf	_decenas
   784  0024  01AF               	clrf	_decenas+1
   785                           
   786                           ;mainL8.c: 143:     unidades = 0;
   787  0025  01B0               	clrf	_unidades
   788  0026  01B1               	clrf	_unidades+1
   789  0027                     l1205:
   790                           
   791                           ;mainL8.c: 144:     if (valor >= 100){
   792  0027  082A               	movf	obtener_decimal@valor+1,w
   793  0028  3A80               	xorlw	128
   794  0029  00FF               	movwf	btemp+1
   795  002A  3080               	movlw	128
   796  002B  027F               	subwf	btemp+1,w
   797  002C  1D03               	skipz
   798  002D  2830               	goto	u505
   799  002E  3064               	movlw	100
   800  002F  0229               	subwf	obtener_decimal@valor,w
   801  0030                     u505:
   802  0030  1C03               	skipc
   803  0031  2833               	goto	u501
   804  0032  2834               	goto	u500
   805  0033                     u501:
   806  0033  285C               	goto	l1209
   807  0034                     u500:
   808  0034                     l1207:
   809                           
   810                           ;mainL8.c: 145:         centenas = valor/100;
   811  0034  3064               	movlw	100
   812  0035  1283               	bcf	3,5	;RP0=0, select bank0
   813  0036  1303               	bcf	3,6	;RP1=0, select bank0
   814  0037  00A0               	movwf	___awdiv@divisor
   815  0038  3000               	movlw	0
   816  0039  00A1               	movwf	___awdiv@divisor+1
   817  003A  082A               	movf	obtener_decimal@valor+1,w
   818  003B  00A3               	movwf	___awdiv@dividend+1
   819  003C  0829               	movf	obtener_decimal@valor,w
   820  003D  00A2               	movwf	___awdiv@dividend
   821  003E  120A  118A  20A9  120A  118A  	fcall	___awdiv
   822  0043  1283               	bcf	3,5	;RP0=0, select bank0
   823  0044  1303               	bcf	3,6	;RP1=0, select bank0
   824  0045  0821               	movf	?___awdiv+1,w
   825  0046  00AD               	movwf	_centenas+1
   826  0047  0820               	movf	?___awdiv,w
   827  0048  00AC               	movwf	_centenas
   828                           
   829                           ;mainL8.c: 146:         valor = valor%100;
   830  0049  3064               	movlw	100
   831  004A  00A0               	movwf	___awmod@divisor
   832  004B  3000               	movlw	0
   833  004C  00A1               	movwf	___awmod@divisor+1
   834  004D  082A               	movf	obtener_decimal@valor+1,w
   835  004E  00A3               	movwf	___awmod@dividend+1
   836  004F  0829               	movf	obtener_decimal@valor,w
   837  0050  00A2               	movwf	___awmod@dividend
   838  0051  120A  118A  216F  120A  118A  	fcall	___awmod
   839  0056  1283               	bcf	3,5	;RP0=0, select bank0
   840  0057  1303               	bcf	3,6	;RP1=0, select bank0
   841  0058  0821               	movf	?___awmod+1,w
   842  0059  00AA               	movwf	obtener_decimal@valor+1
   843  005A  0820               	movf	?___awmod,w
   844  005B  00A9               	movwf	obtener_decimal@valor
   845  005C                     l1209:
   846                           
   847                           ;mainL8.c: 148:     if (valor >= 10){
   848  005C  1283               	bcf	3,5	;RP0=0, select bank0
   849  005D  1303               	bcf	3,6	;RP1=0, select bank0
   850  005E  082A               	movf	obtener_decimal@valor+1,w
   851  005F  3A80               	xorlw	128
   852  0060  00FF               	movwf	btemp+1
   853  0061  3080               	movlw	128
   854  0062  027F               	subwf	btemp+1,w
   855  0063  1D03               	skipz
   856  0064  2867               	goto	u515
   857  0065  300A               	movlw	10
   858  0066  0229               	subwf	obtener_decimal@valor,w
   859  0067                     u515:
   860  0067  1C03               	skipc
   861  0068  286A               	goto	u511
   862  0069  286B               	goto	u510
   863  006A                     u511:
   864  006A  2893               	goto	l1213
   865  006B                     u510:
   866  006B                     l1211:
   867                           
   868                           ;mainL8.c: 149:         decenas = valor/10;
   869  006B  300A               	movlw	10
   870  006C  1283               	bcf	3,5	;RP0=0, select bank0
   871  006D  1303               	bcf	3,6	;RP1=0, select bank0
   872  006E  00A0               	movwf	___awdiv@divisor
   873  006F  3000               	movlw	0
   874  0070  00A1               	movwf	___awdiv@divisor+1
   875  0071  082A               	movf	obtener_decimal@valor+1,w
   876  0072  00A3               	movwf	___awdiv@dividend+1
   877  0073  0829               	movf	obtener_decimal@valor,w
   878  0074  00A2               	movwf	___awdiv@dividend
   879  0075  120A  118A  20A9  120A  118A  	fcall	___awdiv
   880  007A  1283               	bcf	3,5	;RP0=0, select bank0
   881  007B  1303               	bcf	3,6	;RP1=0, select bank0
   882  007C  0821               	movf	?___awdiv+1,w
   883  007D  00AF               	movwf	_decenas+1
   884  007E  0820               	movf	?___awdiv,w
   885  007F  00AE               	movwf	_decenas
   886                           
   887                           ;mainL8.c: 150:         unidades = valor%10;
   888  0080  300A               	movlw	10
   889  0081  00A0               	movwf	___awmod@divisor
   890  0082  3000               	movlw	0
   891  0083  00A1               	movwf	___awmod@divisor+1
   892  0084  082A               	movf	obtener_decimal@valor+1,w
   893  0085  00A3               	movwf	___awmod@dividend+1
   894  0086  0829               	movf	obtener_decimal@valor,w
   895  0087  00A2               	movwf	___awmod@dividend
   896  0088  120A  118A  216F  120A  118A  	fcall	___awmod
   897  008D  1283               	bcf	3,5	;RP0=0, select bank0
   898  008E  1303               	bcf	3,6	;RP1=0, select bank0
   899  008F  0821               	movf	?___awmod+1,w
   900  0090  00B1               	movwf	_unidades+1
   901  0091  0820               	movf	?___awmod,w
   902  0092  00B0               	movwf	_unidades
   903  0093                     l1213:
   904                           
   905                           ;mainL8.c: 152:     if (valor < 10)
   906  0093  1283               	bcf	3,5	;RP0=0, select bank0
   907  0094  1303               	bcf	3,6	;RP1=0, select bank0
   908  0095  082A               	movf	obtener_decimal@valor+1,w
   909  0096  3A80               	xorlw	128
   910  0097  00FF               	movwf	btemp+1
   911  0098  3080               	movlw	128
   912  0099  027F               	subwf	btemp+1,w
   913  009A  1D03               	skipz
   914  009B  289E               	goto	u525
   915  009C  300A               	movlw	10
   916  009D  0229               	subwf	obtener_decimal@valor,w
   917  009E                     u525:
   918  009E  1803               	skipnc
   919  009F  28A1               	goto	u521
   920  00A0  28A2               	goto	u520
   921  00A1                     u521:
   922  00A1  28A8               	goto	l102
   923  00A2                     u520:
   924  00A2                     l1215:
   925                           
   926                           ;mainL8.c: 153:         unidades = valor;
   927  00A2  1283               	bcf	3,5	;RP0=0, select bank0
   928  00A3  1303               	bcf	3,6	;RP1=0, select bank0
   929  00A4  082A               	movf	obtener_decimal@valor+1,w
   930  00A5  00B1               	movwf	_unidades+1
   931  00A6  0829               	movf	obtener_decimal@valor,w
   932  00A7  00B0               	movwf	_unidades
   933  00A8                     l102:
   934  00A8  0008               	return
   935  00A9                     __end_of_obtener_decimal:
   936                           
   937                           	psect	text3
   938  016F                     __ptext3:	
   939 ;; *************** function ___awmod *****************
   940 ;; Defined at:
   941 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awmod.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;  divisor         2    0[BANK0 ] int 
   944 ;;  dividend        2    2[BANK0 ] int 
   945 ;; Auto vars:     Size  Location     Type
   946 ;;  sign            1    6[BANK0 ] unsigned char 
   947 ;;  counter         1    5[BANK0 ] unsigned char 
   948 ;; Return value:  Size  Location     Type
   949 ;;                  2    0[BANK0 ] int 
   950 ;; Registers used:
   951 ;;		wreg, status,2, status,0
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   957 ;;      Params:         0       4       0       0       0
   958 ;;      Locals:         0       2       0       0       0
   959 ;;      Temps:          0       1       0       0       0
   960 ;;      Totals:         0       7       0       0       0
   961 ;;Total ram usage:        7 bytes
   962 ;; Hardware stack levels used: 1
   963 ;; Hardware stack levels required when called: 2
   964 ;; This function calls:
   965 ;;		Nothing
   966 ;; This function is called by:
   967 ;;		_obtener_decimal
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971  016F                     ___awmod:	
   972                           ;psect for function ___awmod
   973                           
   974  016F                     l1103:	
   975                           ;incstack = 0
   976                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   977                           
   978  016F  1283               	bcf	3,5	;RP0=0, select bank0
   979  0170  1303               	bcf	3,6	;RP1=0, select bank0
   980  0171  01A6               	clrf	___awmod@sign
   981  0172                     l1105:
   982  0172  1FA3               	btfss	___awmod@dividend+1,7
   983  0173  2975               	goto	u411
   984  0174  2976               	goto	u410
   985  0175                     u411:
   986  0175  297D               	goto	l1111
   987  0176                     u410:
   988  0176                     l1107:
   989  0176  09A2               	comf	___awmod@dividend,f
   990  0177  09A3               	comf	___awmod@dividend+1,f
   991  0178  0AA2               	incf	___awmod@dividend,f
   992  0179  1903               	skipnz
   993  017A  0AA3               	incf	___awmod@dividend+1,f
   994  017B                     l1109:
   995  017B  01A6               	clrf	___awmod@sign
   996  017C  0AA6               	incf	___awmod@sign,f
   997  017D                     l1111:
   998  017D  1FA1               	btfss	___awmod@divisor+1,7
   999  017E  2980               	goto	u421
  1000  017F  2981               	goto	u420
  1001  0180                     u421:
  1002  0180  2986               	goto	l1115
  1003  0181                     u420:
  1004  0181                     l1113:
  1005  0181  09A0               	comf	___awmod@divisor,f
  1006  0182  09A1               	comf	___awmod@divisor+1,f
  1007  0183  0AA0               	incf	___awmod@divisor,f
  1008  0184  1903               	skipnz
  1009  0185  0AA1               	incf	___awmod@divisor+1,f
  1010  0186                     l1115:
  1011  0186  0820               	movf	___awmod@divisor,w
  1012  0187  0421               	iorwf	___awmod@divisor+1,w
  1013  0188  1903               	btfsc	3,2
  1014  0189  298B               	goto	u431
  1015  018A  298C               	goto	u430
  1016  018B                     u431:
  1017  018B  29BB               	goto	l1133
  1018  018C                     u430:
  1019  018C                     l1117:
  1020  018C  01A5               	clrf	___awmod@counter
  1021  018D  0AA5               	incf	___awmod@counter,f
  1022  018E  299A               	goto	l1123
  1023  018F                     l1119:
  1024  018F  3001               	movlw	1
  1025  0190                     u445:
  1026  0190  1003               	clrc
  1027  0191  0DA0               	rlf	___awmod@divisor,f
  1028  0192  0DA1               	rlf	___awmod@divisor+1,f
  1029  0193  3EFF               	addlw	-1
  1030  0194  1D03               	skipz
  1031  0195  2990               	goto	u445
  1032  0196                     l1121:
  1033  0196  3001               	movlw	1
  1034  0197  00A4               	movwf	??___awmod
  1035  0198  0824               	movf	??___awmod,w
  1036  0199  07A5               	addwf	___awmod@counter,f
  1037  019A                     l1123:
  1038  019A  1FA1               	btfss	___awmod@divisor+1,7
  1039  019B  299D               	goto	u451
  1040  019C  299E               	goto	u450
  1041  019D                     u451:
  1042  019D  298F               	goto	l1119
  1043  019E                     u450:
  1044  019E                     l1125:
  1045  019E  0821               	movf	___awmod@divisor+1,w
  1046  019F  0223               	subwf	___awmod@dividend+1,w
  1047  01A0  1D03               	skipz
  1048  01A1  29A4               	goto	u465
  1049  01A2  0820               	movf	___awmod@divisor,w
  1050  01A3  0222               	subwf	___awmod@dividend,w
  1051  01A4                     u465:
  1052  01A4  1C03               	skipc
  1053  01A5  29A7               	goto	u461
  1054  01A6  29A8               	goto	u460
  1055  01A7                     u461:
  1056  01A7  29AE               	goto	l1129
  1057  01A8                     u460:
  1058  01A8                     l1127:
  1059  01A8  0820               	movf	___awmod@divisor,w
  1060  01A9  02A2               	subwf	___awmod@dividend,f
  1061  01AA  0821               	movf	___awmod@divisor+1,w
  1062  01AB  1C03               	skipc
  1063  01AC  03A3               	decf	___awmod@dividend+1,f
  1064  01AD  02A3               	subwf	___awmod@dividend+1,f
  1065  01AE                     l1129:
  1066  01AE  3001               	movlw	1
  1067  01AF                     u475:
  1068  01AF  1003               	clrc
  1069  01B0  0CA1               	rrf	___awmod@divisor+1,f
  1070  01B1  0CA0               	rrf	___awmod@divisor,f
  1071  01B2  3EFF               	addlw	-1
  1072  01B3  1D03               	skipz
  1073  01B4  29AF               	goto	u475
  1074  01B5                     l1131:
  1075  01B5  3001               	movlw	1
  1076  01B6  02A5               	subwf	___awmod@counter,f
  1077  01B7  1D03               	btfss	3,2
  1078  01B8  29BA               	goto	u481
  1079  01B9  29BB               	goto	u480
  1080  01BA                     u481:
  1081  01BA  299E               	goto	l1125
  1082  01BB                     u480:
  1083  01BB                     l1133:
  1084  01BB  0826               	movf	___awmod@sign,w
  1085  01BC  1903               	btfsc	3,2
  1086  01BD  29BF               	goto	u491
  1087  01BE  29C0               	goto	u490
  1088  01BF                     u491:
  1089  01BF  29C5               	goto	l1137
  1090  01C0                     u490:
  1091  01C0                     l1135:
  1092  01C0  09A2               	comf	___awmod@dividend,f
  1093  01C1  09A3               	comf	___awmod@dividend+1,f
  1094  01C2  0AA2               	incf	___awmod@dividend,f
  1095  01C3  1903               	skipnz
  1096  01C4  0AA3               	incf	___awmod@dividend+1,f
  1097  01C5                     l1137:
  1098  01C5  0823               	movf	___awmod@dividend+1,w
  1099  01C6  00A1               	movwf	?___awmod+1
  1100  01C7  0822               	movf	___awmod@dividend,w
  1101  01C8  00A0               	movwf	?___awmod
  1102  01C9                     l379:
  1103  01C9  0008               	return
  1104  01CA                     __end_of___awmod:
  1105                           
  1106                           	psect	text4
  1107  00A9                     __ptext4:	
  1108 ;; *************** function ___awdiv *****************
  1109 ;; Defined at:
  1110 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awdiv.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;  divisor         2    0[BANK0 ] int 
  1113 ;;  dividend        2    2[BANK0 ] int 
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;  quotient        2    7[BANK0 ] int 
  1116 ;;  sign            1    6[BANK0 ] unsigned char 
  1117 ;;  counter         1    5[BANK0 ] unsigned char 
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  2    0[BANK0 ] int 
  1120 ;; Registers used:
  1121 ;;		wreg, status,2, status,0
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1127 ;;      Params:         0       4       0       0       0
  1128 ;;      Locals:         0       4       0       0       0
  1129 ;;      Temps:          0       1       0       0       0
  1130 ;;      Totals:         0       9       0       0       0
  1131 ;;Total ram usage:        9 bytes
  1132 ;; Hardware stack levels used: 1
  1133 ;; Hardware stack levels required when called: 2
  1134 ;; This function calls:
  1135 ;;		Nothing
  1136 ;; This function is called by:
  1137 ;;		_obtener_decimal
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141  00A9                     ___awdiv:	
  1142                           ;psect for function ___awdiv
  1143                           
  1144  00A9                     l1059:	
  1145                           ;incstack = 0
  1146                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1147                           
  1148  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  1149  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  1150  00AB  01A6               	clrf	___awdiv@sign
  1151  00AC                     l1061:
  1152  00AC  1FA1               	btfss	___awdiv@divisor+1,7
  1153  00AD  28AF               	goto	u311
  1154  00AE  28B0               	goto	u310
  1155  00AF                     u311:
  1156  00AF  28B7               	goto	l1067
  1157  00B0                     u310:
  1158  00B0                     l1063:
  1159  00B0  09A0               	comf	___awdiv@divisor,f
  1160  00B1  09A1               	comf	___awdiv@divisor+1,f
  1161  00B2  0AA0               	incf	___awdiv@divisor,f
  1162  00B3  1903               	skipnz
  1163  00B4  0AA1               	incf	___awdiv@divisor+1,f
  1164  00B5                     l1065:
  1165  00B5  01A6               	clrf	___awdiv@sign
  1166  00B6  0AA6               	incf	___awdiv@sign,f
  1167  00B7                     l1067:
  1168  00B7  1FA3               	btfss	___awdiv@dividend+1,7
  1169  00B8  28BA               	goto	u321
  1170  00B9  28BB               	goto	u320
  1171  00BA                     u321:
  1172  00BA  28C4               	goto	l1073
  1173  00BB                     u320:
  1174  00BB                     l1069:
  1175  00BB  09A2               	comf	___awdiv@dividend,f
  1176  00BC  09A3               	comf	___awdiv@dividend+1,f
  1177  00BD  0AA2               	incf	___awdiv@dividend,f
  1178  00BE  1903               	skipnz
  1179  00BF  0AA3               	incf	___awdiv@dividend+1,f
  1180  00C0                     l1071:
  1181  00C0  3001               	movlw	1
  1182  00C1  00A4               	movwf	??___awdiv
  1183  00C2  0824               	movf	??___awdiv,w
  1184  00C3  06A6               	xorwf	___awdiv@sign,f
  1185  00C4                     l1073:
  1186  00C4  01A7               	clrf	___awdiv@quotient
  1187  00C5  01A8               	clrf	___awdiv@quotient+1
  1188  00C6                     l1075:
  1189  00C6  0820               	movf	___awdiv@divisor,w
  1190  00C7  0421               	iorwf	___awdiv@divisor+1,w
  1191  00C8  1903               	btfsc	3,2
  1192  00C9  28CB               	goto	u331
  1193  00CA  28CC               	goto	u330
  1194  00CB                     u331:
  1195  00CB  2903               	goto	l1095
  1196  00CC                     u330:
  1197  00CC                     l1077:
  1198  00CC  01A5               	clrf	___awdiv@counter
  1199  00CD  0AA5               	incf	___awdiv@counter,f
  1200  00CE  28DA               	goto	l1083
  1201  00CF                     l1079:
  1202  00CF  3001               	movlw	1
  1203  00D0                     u345:
  1204  00D0  1003               	clrc
  1205  00D1  0DA0               	rlf	___awdiv@divisor,f
  1206  00D2  0DA1               	rlf	___awdiv@divisor+1,f
  1207  00D3  3EFF               	addlw	-1
  1208  00D4  1D03               	skipz
  1209  00D5  28D0               	goto	u345
  1210  00D6                     l1081:
  1211  00D6  3001               	movlw	1
  1212  00D7  00A4               	movwf	??___awdiv
  1213  00D8  0824               	movf	??___awdiv,w
  1214  00D9  07A5               	addwf	___awdiv@counter,f
  1215  00DA                     l1083:
  1216  00DA  1FA1               	btfss	___awdiv@divisor+1,7
  1217  00DB  28DD               	goto	u351
  1218  00DC  28DE               	goto	u350
  1219  00DD                     u351:
  1220  00DD  28CF               	goto	l1079
  1221  00DE                     u350:
  1222  00DE                     l1085:
  1223  00DE  3001               	movlw	1
  1224  00DF                     u365:
  1225  00DF  1003               	clrc
  1226  00E0  0DA7               	rlf	___awdiv@quotient,f
  1227  00E1  0DA8               	rlf	___awdiv@quotient+1,f
  1228  00E2  3EFF               	addlw	-1
  1229  00E3  1D03               	skipz
  1230  00E4  28DF               	goto	u365
  1231  00E5  0821               	movf	___awdiv@divisor+1,w
  1232  00E6  0223               	subwf	___awdiv@dividend+1,w
  1233  00E7  1D03               	skipz
  1234  00E8  28EB               	goto	u375
  1235  00E9  0820               	movf	___awdiv@divisor,w
  1236  00EA  0222               	subwf	___awdiv@dividend,w
  1237  00EB                     u375:
  1238  00EB  1C03               	skipc
  1239  00EC  28EE               	goto	u371
  1240  00ED  28EF               	goto	u370
  1241  00EE                     u371:
  1242  00EE  28F6               	goto	l1091
  1243  00EF                     u370:
  1244  00EF                     l1087:
  1245  00EF  0820               	movf	___awdiv@divisor,w
  1246  00F0  02A2               	subwf	___awdiv@dividend,f
  1247  00F1  0821               	movf	___awdiv@divisor+1,w
  1248  00F2  1C03               	skipc
  1249  00F3  03A3               	decf	___awdiv@dividend+1,f
  1250  00F4  02A3               	subwf	___awdiv@dividend+1,f
  1251  00F5                     l1089:
  1252  00F5  1427               	bsf	___awdiv@quotient,0
  1253  00F6                     l1091:
  1254  00F6  3001               	movlw	1
  1255  00F7                     u385:
  1256  00F7  1003               	clrc
  1257  00F8  0CA1               	rrf	___awdiv@divisor+1,f
  1258  00F9  0CA0               	rrf	___awdiv@divisor,f
  1259  00FA  3EFF               	addlw	-1
  1260  00FB  1D03               	skipz
  1261  00FC  28F7               	goto	u385
  1262  00FD                     l1093:
  1263  00FD  3001               	movlw	1
  1264  00FE  02A5               	subwf	___awdiv@counter,f
  1265  00FF  1D03               	btfss	3,2
  1266  0100  2902               	goto	u391
  1267  0101  2903               	goto	u390
  1268  0102                     u391:
  1269  0102  28DE               	goto	l1085
  1270  0103                     u390:
  1271  0103                     l1095:
  1272  0103  0826               	movf	___awdiv@sign,w
  1273  0104  1903               	btfsc	3,2
  1274  0105  2907               	goto	u401
  1275  0106  2908               	goto	u400
  1276  0107                     u401:
  1277  0107  290D               	goto	l1099
  1278  0108                     u400:
  1279  0108                     l1097:
  1280  0108  09A7               	comf	___awdiv@quotient,f
  1281  0109  09A8               	comf	___awdiv@quotient+1,f
  1282  010A  0AA7               	incf	___awdiv@quotient,f
  1283  010B  1903               	skipnz
  1284  010C  0AA8               	incf	___awdiv@quotient+1,f
  1285  010D                     l1099:
  1286  010D  0828               	movf	___awdiv@quotient+1,w
  1287  010E  00A1               	movwf	?___awdiv+1
  1288  010F  0827               	movf	___awdiv@quotient,w
  1289  0110  00A0               	movwf	?___awdiv
  1290  0111                     l366:
  1291  0111  0008               	return
  1292  0112                     __end_of___awdiv:
  1293                           
  1294                           	psect	text5
  1295  021D                     __ptext5:	
  1296 ;; *************** function _multiplexado *****************
  1297 ;; Defined at:
  1298 ;;		line 158 in file "mainL8.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;  selector        1    wreg     unsigned char 
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;  selector        1    5[BANK0 ] unsigned char 
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  1    wreg      void 
  1305 ;; Registers used:
  1306 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1312 ;;      Params:         0       0       0       0       0
  1313 ;;      Locals:         0       1       0       0       0
  1314 ;;      Temps:          0       2       0       0       0
  1315 ;;      Totals:         0       3       0       0       0
  1316 ;;Total ram usage:        3 bytes
  1317 ;; Hardware stack levels used: 1
  1318 ;; Hardware stack levels required when called: 3
  1319 ;; This function calls:
  1320 ;;		_tabla_7seg
  1321 ;; This function is called by:
  1322 ;;		_main
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326  021D                     _multiplexado:	
  1327                           ;psect for function _multiplexado
  1328                           
  1329                           
  1330                           ;incstack = 0
  1331                           ; Regs used in _multiplexado: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1332                           ;multiplexado@selector stored from wreg
  1333  021D  1283               	bcf	3,5	;RP0=0, select bank0
  1334  021E  1303               	bcf	3,6	;RP1=0, select bank0
  1335  021F  00A5               	movwf	multiplexado@selector
  1336  0220                     l1219:
  1337                           
  1338                           ;mainL8.c: 159:     PORTD = 0;
  1339  0220  0188               	clrf	8	;volatile
  1340  0221                     l1221:
  1341                           
  1342                           ;mainL8.c: 160:     PORTCbits.RC7 = 1;
  1343  0221  1787               	bsf	7,7	;volatile
  1344                           
  1345                           ;mainL8.c: 161:     switch(selector){
  1346  0222  2A53               	goto	l1245
  1347  0223                     l1223:
  1348                           
  1349                           ;mainL8.c: 163:             tabla_7seg(unidades);
  1350  0223  0831               	movf	_unidades+1,w
  1351  0224  00A1               	movwf	tabla_7seg@decimal+1
  1352  0225  0830               	movf	_unidades,w
  1353  0226  00A0               	movwf	tabla_7seg@decimal
  1354  0227  120A  118A  2112  120A  118A  	fcall	_tabla_7seg
  1355  022C                     l1225:
  1356                           
  1357                           ;mainL8.c: 164:             PORTC = valor_tabla;
  1358  022C  1283               	bcf	3,5	;RP0=0, select bank0
  1359  022D  1303               	bcf	3,6	;RP1=0, select bank0
  1360  022E  0834               	movf	_valor_tabla,w
  1361  022F  0087               	movwf	7	;volatile
  1362  0230                     l1227:
  1363                           
  1364                           ;mainL8.c: 165:             PORTDbits.RD0 = 1;
  1365  0230  1408               	bsf	8,0	;volatile
  1366                           
  1367                           ;mainL8.c: 166:             break;
  1368  0231  2A66               	goto	l111
  1369  0232                     l1229:
  1370                           
  1371                           ;mainL8.c: 168:             tabla_7seg(decenas);
  1372  0232  082F               	movf	_decenas+1,w
  1373  0233  00A1               	movwf	tabla_7seg@decimal+1
  1374  0234  082E               	movf	_decenas,w
  1375  0235  00A0               	movwf	tabla_7seg@decimal
  1376  0236  120A  118A  2112  120A  118A  	fcall	_tabla_7seg
  1377  023B                     l1231:
  1378                           
  1379                           ;mainL8.c: 169:             PORTC = valor_tabla;
  1380  023B  1283               	bcf	3,5	;RP0=0, select bank0
  1381  023C  1303               	bcf	3,6	;RP1=0, select bank0
  1382  023D  0834               	movf	_valor_tabla,w
  1383  023E  0087               	movwf	7	;volatile
  1384  023F                     l1233:
  1385                           
  1386                           ;mainL8.c: 170:             PORTDbits.RD1 = 1;
  1387  023F  1488               	bsf	8,1	;volatile
  1388                           
  1389                           ;mainL8.c: 171:             break;
  1390  0240  2A66               	goto	l111
  1391  0241                     l1235:
  1392                           
  1393                           ;mainL8.c: 173:             tabla_7seg(centenas);
  1394  0241  082D               	movf	_centenas+1,w
  1395  0242  00A1               	movwf	tabla_7seg@decimal+1
  1396  0243  082C               	movf	_centenas,w
  1397  0244  00A0               	movwf	tabla_7seg@decimal
  1398  0245  120A  118A  2112  120A  118A  	fcall	_tabla_7seg
  1399  024A                     l1237:
  1400                           
  1401                           ;mainL8.c: 174:             PORTC = valor_tabla;
  1402  024A  1283               	bcf	3,5	;RP0=0, select bank0
  1403  024B  1303               	bcf	3,6	;RP1=0, select bank0
  1404  024C  0834               	movf	_valor_tabla,w
  1405  024D  0087               	movwf	7	;volatile
  1406  024E                     l1239:
  1407                           
  1408                           ;mainL8.c: 175:             PORTCbits.RC7 = 1;
  1409  024E  1787               	bsf	7,7	;volatile
  1410  024F                     l1241:
  1411                           
  1412                           ;mainL8.c: 176:             PORTDbits.RD2 = 1;
  1413  024F  1508               	bsf	8,2	;volatile
  1414                           
  1415                           ;mainL8.c: 177:             break;
  1416  0250  2A66               	goto	l111
  1417  0251                     l1243:
  1418                           
  1419                           ;mainL8.c: 179:             PORTD = 0;
  1420  0251  0188               	clrf	8	;volatile
  1421                           
  1422                           ;mainL8.c: 180:     }
  1423  0252  2A66               	goto	l111
  1424  0253                     l1245:
  1425  0253  0825               	movf	multiplexado@selector,w
  1426  0254  00A3               	movwf	??_multiplexado
  1427  0255  01A4               	clrf	??_multiplexado+1
  1428                           
  1429                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1430                           ; Switch size 1, requested type "simple"
  1431                           ; Number of cases is 1, Range of values is 0 to 0
  1432                           ; switch strategies available:
  1433                           ; Name         Instructions Cycles
  1434                           ; simple_byte            4     3 (average)
  1435                           ; direct_byte           11     8 (fixed)
  1436                           ; jumptable            260     6 (fixed)
  1437                           ;	Chosen strategy is simple_byte
  1438  0256  0824               	movf	??_multiplexado+1,w
  1439  0257  3A00               	xorlw	0	; case 0
  1440  0258  1903               	skipnz
  1441  0259  2A5B               	goto	l1335
  1442  025A  2A51               	goto	l1243
  1443  025B                     l1335:
  1444                           
  1445                           ; Switch size 1, requested type "simple"
  1446                           ; Number of cases is 3, Range of values is 0 to 2
  1447                           ; switch strategies available:
  1448                           ; Name         Instructions Cycles
  1449                           ; simple_byte           10     6 (average)
  1450                           ; direct_byte           17     8 (fixed)
  1451                           ; jumptable            260     6 (fixed)
  1452                           ;	Chosen strategy is simple_byte
  1453  025B  0823               	movf	??_multiplexado,w
  1454  025C  3A00               	xorlw	0	; case 0
  1455  025D  1903               	skipnz
  1456  025E  2A23               	goto	l1223
  1457  025F  3A01               	xorlw	1	; case 1
  1458  0260  1903               	skipnz
  1459  0261  2A32               	goto	l1229
  1460  0262  3A03               	xorlw	3	; case 2
  1461  0263  1903               	skipnz
  1462  0264  2A41               	goto	l1235
  1463  0265  2A51               	goto	l1243
  1464  0266                     l111:
  1465  0266  0008               	return
  1466  0267                     __end_of_multiplexado:
  1467                           
  1468                           	psect	text6
  1469  0112                     __ptext6:	
  1470 ;; *************** function _tabla_7seg *****************
  1471 ;; Defined at:
  1472 ;;		line 184 in file "mainL8.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;  decimal         2    0[BANK0 ] int 
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;		None
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1486 ;;      Params:         0       2       0       0       0
  1487 ;;      Locals:         0       0       0       0       0
  1488 ;;      Temps:          0       1       0       0       0
  1489 ;;      Totals:         0       3       0       0       0
  1490 ;;Total ram usage:        3 bytes
  1491 ;; Hardware stack levels used: 1
  1492 ;; Hardware stack levels required when called: 2
  1493 ;; This function calls:
  1494 ;;		Nothing
  1495 ;; This function is called by:
  1496 ;;		_multiplexado
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500  0112                     _tabla_7seg:	
  1501                           ;psect for function _tabla_7seg
  1502                           
  1503  0112                     l1027:	
  1504                           ;incstack = 0
  1505                           ; Regs used in _tabla_7seg: [wreg-fsr0h+status,2+status,0]
  1506                           
  1507                           
  1508                           ;mainL8.c: 185:     switch(decimal){
  1509  0112  2947               	goto	l1053
  1510  0113                     l1029:
  1511                           
  1512                           ;mainL8.c: 187:             valor_tabla = 0b00111111;
  1513  0113  303F               	movlw	63
  1514  0114  00A2               	movwf	??_tabla_7seg
  1515  0115  0822               	movf	??_tabla_7seg,w
  1516  0116  00B4               	movwf	_valor_tabla
  1517                           
  1518                           ;mainL8.c: 188:             break;
  1519  0117  296E               	goto	l127
  1520  0118                     l1031:
  1521                           
  1522                           ;mainL8.c: 190:             valor_tabla = 0b00000110;
  1523  0118  3006               	movlw	6
  1524  0119  00A2               	movwf	??_tabla_7seg
  1525  011A  0822               	movf	??_tabla_7seg,w
  1526  011B  00B4               	movwf	_valor_tabla
  1527                           
  1528                           ;mainL8.c: 191:             break;
  1529  011C  296E               	goto	l127
  1530  011D                     l1033:
  1531                           
  1532                           ;mainL8.c: 193:             valor_tabla = 0b01011011;
  1533  011D  305B               	movlw	91
  1534  011E  00A2               	movwf	??_tabla_7seg
  1535  011F  0822               	movf	??_tabla_7seg,w
  1536  0120  00B4               	movwf	_valor_tabla
  1537                           
  1538                           ;mainL8.c: 194:             break;
  1539  0121  296E               	goto	l127
  1540  0122                     l1035:
  1541                           
  1542                           ;mainL8.c: 196:             valor_tabla = 0b01001111;
  1543  0122  304F               	movlw	79
  1544  0123  00A2               	movwf	??_tabla_7seg
  1545  0124  0822               	movf	??_tabla_7seg,w
  1546  0125  00B4               	movwf	_valor_tabla
  1547                           
  1548                           ;mainL8.c: 197:             break;
  1549  0126  296E               	goto	l127
  1550  0127                     l1037:
  1551                           
  1552                           ;mainL8.c: 199:             valor_tabla = 0b01100110;
  1553  0127  3066               	movlw	102
  1554  0128  00A2               	movwf	??_tabla_7seg
  1555  0129  0822               	movf	??_tabla_7seg,w
  1556  012A  00B4               	movwf	_valor_tabla
  1557                           
  1558                           ;mainL8.c: 200:             break;
  1559  012B  296E               	goto	l127
  1560  012C                     l1039:
  1561                           
  1562                           ;mainL8.c: 202:             valor_tabla = 0b01101101;
  1563  012C  306D               	movlw	109
  1564  012D  00A2               	movwf	??_tabla_7seg
  1565  012E  0822               	movf	??_tabla_7seg,w
  1566  012F  00B4               	movwf	_valor_tabla
  1567                           
  1568                           ;mainL8.c: 203:             break;
  1569  0130  296E               	goto	l127
  1570  0131                     l1041:
  1571                           
  1572                           ;mainL8.c: 205:             valor_tabla = 0b01111101;
  1573  0131  307D               	movlw	125
  1574  0132  00A2               	movwf	??_tabla_7seg
  1575  0133  0822               	movf	??_tabla_7seg,w
  1576  0134  00B4               	movwf	_valor_tabla
  1577                           
  1578                           ;mainL8.c: 206:             break;
  1579  0135  296E               	goto	l127
  1580  0136                     l1043:
  1581                           
  1582                           ;mainL8.c: 208:             valor_tabla = 0b00000111;
  1583  0136  3007               	movlw	7
  1584  0137  00A2               	movwf	??_tabla_7seg
  1585  0138  0822               	movf	??_tabla_7seg,w
  1586  0139  00B4               	movwf	_valor_tabla
  1587                           
  1588                           ;mainL8.c: 209:             break;
  1589  013A  296E               	goto	l127
  1590  013B                     l1045:
  1591                           
  1592                           ;mainL8.c: 211:             valor_tabla = 0b01111111;
  1593  013B  307F               	movlw	127
  1594  013C  00A2               	movwf	??_tabla_7seg
  1595  013D  0822               	movf	??_tabla_7seg,w
  1596  013E  00B4               	movwf	_valor_tabla
  1597                           
  1598                           ;mainL8.c: 212:             break;
  1599  013F  296E               	goto	l127
  1600  0140                     l1047:
  1601                           
  1602                           ;mainL8.c: 214:             valor_tabla = 0b01101111;
  1603  0140  306F               	movlw	111
  1604  0141  00A2               	movwf	??_tabla_7seg
  1605  0142  0822               	movf	??_tabla_7seg,w
  1606  0143  00B4               	movwf	_valor_tabla
  1607                           
  1608                           ;mainL8.c: 215:             break;
  1609  0144  296E               	goto	l127
  1610  0145                     l1049:
  1611                           
  1612                           ;mainL8.c: 217:             valor_tabla = 0b00000000;
  1613  0145  01B4               	clrf	_valor_tabla
  1614                           
  1615                           ;mainL8.c: 218:             break;
  1616  0146  296E               	goto	l127
  1617  0147                     l1053:
  1618                           
  1619                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1620                           ; Switch size 1, requested type "simple"
  1621                           ; Number of cases is 1, Range of values is 0 to 0
  1622                           ; switch strategies available:
  1623                           ; Name         Instructions Cycles
  1624                           ; simple_byte            4     3 (average)
  1625                           ; direct_byte           11     8 (fixed)
  1626                           ; jumptable            260     6 (fixed)
  1627                           ;	Chosen strategy is simple_byte
  1628  0147  1283               	bcf	3,5	;RP0=0, select bank0
  1629  0148  1303               	bcf	3,6	;RP1=0, select bank0
  1630  0149  0821               	movf	tabla_7seg@decimal+1,w
  1631  014A  3A00               	xorlw	0	; case 0
  1632  014B  1903               	skipnz
  1633  014C  294E               	goto	l1337
  1634  014D  2945               	goto	l1049
  1635  014E                     l1337:
  1636                           
  1637                           ; Switch size 1, requested type "simple"
  1638                           ; Number of cases is 10, Range of values is 0 to 9
  1639                           ; switch strategies available:
  1640                           ; Name         Instructions Cycles
  1641                           ; simple_byte           31    16 (average)
  1642                           ; direct_byte           38     8 (fixed)
  1643                           ; jumptable            260     6 (fixed)
  1644                           ;	Chosen strategy is simple_byte
  1645  014E  0820               	movf	tabla_7seg@decimal,w
  1646  014F  3A00               	xorlw	0	; case 0
  1647  0150  1903               	skipnz
  1648  0151  2913               	goto	l1029
  1649  0152  3A01               	xorlw	1	; case 1
  1650  0153  1903               	skipnz
  1651  0154  2918               	goto	l1031
  1652  0155  3A03               	xorlw	3	; case 2
  1653  0156  1903               	skipnz
  1654  0157  291D               	goto	l1033
  1655  0158  3A01               	xorlw	1	; case 3
  1656  0159  1903               	skipnz
  1657  015A  2922               	goto	l1035
  1658  015B  3A07               	xorlw	7	; case 4
  1659  015C  1903               	skipnz
  1660  015D  2927               	goto	l1037
  1661  015E  3A01               	xorlw	1	; case 5
  1662  015F  1903               	skipnz
  1663  0160  292C               	goto	l1039
  1664  0161  3A03               	xorlw	3	; case 6
  1665  0162  1903               	skipnz
  1666  0163  2931               	goto	l1041
  1667  0164  3A01               	xorlw	1	; case 7
  1668  0165  1903               	skipnz
  1669  0166  2936               	goto	l1043
  1670  0167  3A0F               	xorlw	15	; case 8
  1671  0168  1903               	skipnz
  1672  0169  293B               	goto	l1045
  1673  016A  3A01               	xorlw	1	; case 9
  1674  016B  1903               	skipnz
  1675  016C  2940               	goto	l1047
  1676  016D  2945               	goto	l1049
  1677  016E                     l127:
  1678  016E  0008               	return
  1679  016F                     __end_of_tabla_7seg:
  1680                           
  1681                           	psect	text7
  1682  0267                     __ptext7:	
  1683 ;; *************** function _isr *****************
  1684 ;; Defined at:
  1685 ;;		line 55 in file "mainL8.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;		None
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;		None
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  1    wreg      void 
  1692 ;; Registers used:
  1693 ;;		wreg, status,2, status,0, pclath, cstack
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1699 ;;      Params:         0       0       0       0       0
  1700 ;;      Locals:         0       0       0       0       0
  1701 ;;      Temps:          3       0       0       0       0
  1702 ;;      Totals:         3       0       0       0       0
  1703 ;;Total ram usage:        3 bytes
  1704 ;; Hardware stack levels used: 1
  1705 ;; Hardware stack levels required when called: 1
  1706 ;; This function calls:
  1707 ;;		_map
  1708 ;; This function is called by:
  1709 ;;		Interrupt level 1
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713  0267                     _isr:	
  1714                           ;psect for function _isr
  1715                           
  1716  0267                     i1l1251:
  1717                           
  1718                           ;mainL8.c: 56:     if(PIR1bits.ADIF){
  1719  0267  1283               	bcf	3,5	;RP0=0, select bank0
  1720  0268  1303               	bcf	3,6	;RP1=0, select bank0
  1721  0269  1F0C               	btfss	12,6	;volatile
  1722  026A  2A6C               	goto	u53_21
  1723  026B  2A6D               	goto	u53_20
  1724  026C                     u53_21:
  1725  026C  2A90               	goto	i1l71
  1726  026D                     u53_20:
  1727  026D                     i1l1253:
  1728                           
  1729                           ;mainL8.c: 57:         if(ADCON0bits.CHS == 0){
  1730  026D  0C1F               	rrf	31,w	;volatile
  1731  026E  00F5               	movwf	??_isr
  1732  026F  0C75               	rrf	??_isr,w
  1733  0270  390F               	andlw	15
  1734  0271  3A00               	xorlw	0
  1735  0272  1D03               	skipz
  1736  0273  2A75               	goto	u54_21
  1737  0274  2A76               	goto	u54_20
  1738  0275                     u54_21:
  1739  0275  2A79               	goto	i1l1257
  1740  0276                     u54_20:
  1741  0276                     i1l1255:
  1742                           
  1743                           ;mainL8.c: 58:             PORTB = ADRESH;
  1744  0276  081E               	movf	30,w	;volatile
  1745  0277  0086               	movwf	6	;volatile
  1746                           
  1747                           ;mainL8.c: 59:         }
  1748  0278  2A8E               	goto	i1l1261
  1749  0279                     i1l1257:
  1750  0279  0C1F               	rrf	31,w	;volatile
  1751  027A  00F5               	movwf	??_isr
  1752  027B  0C75               	rrf	??_isr,w
  1753  027C  390F               	andlw	15
  1754  027D  3A01               	xorlw	1
  1755  027E  1D03               	skipz
  1756  027F  2A81               	goto	u55_21
  1757  0280  2A82               	goto	u55_20
  1758  0281                     u55_21:
  1759  0281  2A8E               	goto	i1l1261
  1760  0282                     u55_20:
  1761  0282                     i1l1259:
  1762                           
  1763                           ;mainL8.c: 62:             valor = map(ADRESH);
  1764  0282  081E               	movf	30,w	;volatile
  1765  0283  120A  118A  22EB  120A  118A  	fcall	_map
  1766  0288  0871               	movf	?_map+1,w
  1767  0289  1283               	bcf	3,5	;RP0=0, select bank0
  1768  028A  1303               	bcf	3,6	;RP1=0, select bank0
  1769  028B  00B3               	movwf	_valor+1
  1770  028C  0870               	movf	?_map,w
  1771  028D  00B2               	movwf	_valor
  1772  028E                     i1l1261:
  1773                           
  1774                           ;mainL8.c: 64:         PIR1bits.ADIF = 0;
  1775  028E  130C               	bcf	12,6	;volatile
  1776                           
  1777                           ;mainL8.c: 65:     }
  1778  028F  2AA3               	goto	i1l78
  1779  0290                     i1l71:	
  1780                           ;mainL8.c: 66:     else if (INTCONbits.T0IF){
  1781                           
  1782  0290  1D0B               	btfss	11,2	;volatile
  1783  0291  2A93               	goto	u56_21
  1784  0292  2A94               	goto	u56_20
  1785  0293                     u56_21:
  1786  0293  2AA3               	goto	i1l78
  1787  0294                     u56_20:
  1788  0294                     i1l1263:
  1789                           
  1790                           ;mainL8.c: 67:         TMR0 = 236;
  1791  0294  30EC               	movlw	236
  1792  0295  0081               	movwf	1	;volatile
  1793  0296                     i1l1265:
  1794                           
  1795                           ;mainL8.c: 68:         INTCONbits.T0IF = 0;
  1796  0296  110B               	bcf	11,2	;volatile
  1797  0297                     i1l1267:
  1798                           
  1799                           ;mainL8.c: 69:         selector++;
  1800  0297  3001               	movlw	1
  1801  0298  00F5               	movwf	??_isr
  1802  0299  0875               	movf	??_isr,w
  1803  029A  07F8               	addwf	_selector,f
  1804  029B                     i1l1269:
  1805                           
  1806                           ;mainL8.c: 70:         if (selector>2)
  1807  029B  3003               	movlw	3
  1808  029C  0278               	subwf	_selector,w
  1809  029D  1C03               	skipc
  1810  029E  2AA0               	goto	u57_21
  1811  029F  2AA1               	goto	u57_20
  1812  02A0                     u57_21:
  1813  02A0  2AA3               	goto	i1l75
  1814  02A1                     u57_20:
  1815  02A1                     i1l1271:
  1816                           
  1817                           ;mainL8.c: 71:             selector = 0;
  1818  02A1  01F8               	clrf	_selector
  1819  02A2  2AA3               	goto	i1l78
  1820  02A3                     i1l75:
  1821  02A3                     i1l78:
  1822  02A3  0877               	movf	??_isr+2,w
  1823  02A4  008A               	movwf	10
  1824  02A5  0E76               	swapf	??_isr+1,w
  1825  02A6  0083               	movwf	3
  1826  02A7  0EFE               	swapf	btemp,f
  1827  02A8  0E7E               	swapf	btemp,w
  1828  02A9  0009               	retfie
  1829  02AA                     __end_of_isr:
  1830                           
  1831                           	psect	intentry
  1832  0004                     __pintentry:	
  1833                           ;incstack = 0
  1834                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1835                           
  1836  0004                     interrupt_function:
  1837  007E                     saved_w	set	btemp
  1838  0004  00FE               	movwf	btemp
  1839  0005  0E03               	swapf	3,w
  1840  0006  00F6               	movwf	??_isr+1
  1841  0007  080A               	movf	10,w
  1842  0008  00F7               	movwf	??_isr+2
  1843  0009  120A  118A  2A67   	ljmp	_isr
  1844                           
  1845                           	psect	text8
  1846  02EB                     __ptext8:	
  1847 ;; *************** function _map *****************
  1848 ;; Defined at:
  1849 ;;		line 135 in file "mainL8.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;  val             1    wreg     unsigned char 
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;  val             1    4[COMMON] unsigned char 
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  2    0[COMMON] int 
  1856 ;; Registers used:
  1857 ;;		wreg
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1863 ;;      Params:         2       0       0       0       0
  1864 ;;      Locals:         1       0       0       0       0
  1865 ;;      Temps:          2       0       0       0       0
  1866 ;;      Totals:         5       0       0       0       0
  1867 ;;Total ram usage:        5 bytes
  1868 ;; Hardware stack levels used: 1
  1869 ;; This function calls:
  1870 ;;		Nothing
  1871 ;; This function is called by:
  1872 ;;		_isr
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876  02EB                     _map:	
  1877                           ;psect for function _map
  1878                           
  1879                           
  1880                           ;incstack = 0
  1881                           ; Regs used in _map: [wreg]
  1882                           ;map@val stored from wreg
  1883  02EB  00F4               	movwf	map@val
  1884  02EC                     i1l1141:
  1885                           
  1886                           ;mainL8.c: 136:     return 2*val;
  1887  02EC  0874               	movf	map@val,w
  1888  02ED  00F2               	movwf	??_map
  1889  02EE  01F3               	clrf	??_map+1
  1890  02EF  1003               	clrc
  1891  02F0  0D72               	rlf	??_map,w
  1892  02F1  00F0               	movwf	?_map
  1893  02F2  0D73               	rlf	??_map+1,w
  1894  02F3  00F1               	movwf	?_map+1
  1895  02F4                     i1l96:
  1896  02F4  0008               	return
  1897  02F5                     __end_of_map:
  1898  007E                     btemp	set	126	;btemp
  1899  007E                     wtemp0	set	126
  1900                           
  1901                           	psect	idloc
  1902                           
  1903                           ;Config register IDLOC0 @ 0x2000
  1904                           ;	unspecified, using default values
  1905  2000                     	org	8192
  1906  2000  3FFF               	dw	16383
  1907                           
  1908                           ;Config register IDLOC1 @ 0x2001
  1909                           ;	unspecified, using default values
  1910  2001                     	org	8193
  1911  2001  3FFF               	dw	16383
  1912                           
  1913                           ;Config register IDLOC2 @ 0x2002
  1914                           ;	unspecified, using default values
  1915  2002                     	org	8194
  1916  2002  3FFF               	dw	16383
  1917                           
  1918                           ;Config register IDLOC3 @ 0x2003
  1919                           ;	unspecified, using default values
  1920  2003                     	org	8195
  1921  2003  3FFF               	dw	16383
  1922                           
  1923                           	psect	config
  1924                           
  1925                           ;Config register CONFIG1 @ 0x2007
  1926                           ;	Oscillator Selection bits
  1927                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1928                           ;	Watchdog Timer Enable bit
  1929                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1930                           ;	Power-up Timer Enable bit
  1931                           ;	PWRTE = OFF, PWRT disabled
  1932                           ;	RE3/MCLR pin function select bit
  1933                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1934                           ;	Code Protection bit
  1935                           ;	CP = OFF, Program memory code protection is disabled
  1936                           ;	Data Code Protection bit
  1937                           ;	CPD = OFF, Data memory code protection is disabled
  1938                           ;	Brown Out Reset Selection bits
  1939                           ;	BOREN = OFF, BOR disabled
  1940                           ;	Internal External Switchover bit
  1941                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1942                           ;	Fail-Safe Clock Monitor Enabled bit
  1943                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1944                           ;	Low Voltage Programming Enable bit
  1945                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1946                           ;	In-Circuit Debugger Mode bit
  1947                           ;	DEBUG = 0x1, unprogrammed default
  1948  2007                     	org	8199
  1949  2007  20D4               	dw	8404
  1950                           
  1951                           ;Config register CONFIG2 @ 0x2008
  1952                           ;	Brown-out Reset Selection bit
  1953                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1954                           ;	Flash Program Memory Self Write Enable bits
  1955                           ;	WRT = OFF, Write protection off
  1956  2008                     	org	8200
  1957  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80     12      21
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_map

Critical Paths under _main in BANK0

    _main->_obtener_decimal
    _obtener_decimal->___awdiv
    _multiplexado->_tabla_7seg

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1729
                                             11 BANK0      1     1      0
                       _multiplexado
                    _obtener_decimal
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _obtener_decimal                                      2     0      2    1457
                                              9 BANK0      2     0      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _multiplexado                                         3     3      0     272
                                              3 BANK0      3     3      0
                         _tabla_7seg
 ---------------------------------------------------------------------------------
 (2) _tabla_7seg                                           3     1      2     250
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      22
                                              5 COMMON     3     3      0
                                _map
 ---------------------------------------------------------------------------------
 (4) _map                                                  5     3      2      22
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _multiplexado
     _tabla_7seg
   _obtener_decimal
     ___awdiv
     ___awmod
   _setup

 _isr (ROOT)
   _map

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C      15       5       26.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1E      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sat Apr 23 18:05:45 2022

                     l93 021C             ___awdiv@sign 0026                      l102 00A8  
                    l111 0266                      l127 016E                      l366 0111  
                    l379 01C9                      u310 00B0                      u311 00AF  
                    u400 0108                      u320 00BB                      u401 0107  
                    u321 00BA                      u330 00CC                      u410 0176  
                    u331 00CB                      u411 0175                      u420 0181  
                    u500 0034                      u421 0180                      u501 0033  
                    u350 00DE                      u430 018C                      u510 006B  
                    u351 00DD                      u431 018B                      u511 006A  
                    u520 00A2                      u600 02CC                      u345 00D0  
                    u521 00A1                      u505 0030                      u601 02CB  
                    u370 00EF                      u450 019E                      u371 00EE  
                    u451 019D                      u515 0067                      u460 01A8  
                    u365 00DF                      u461 01A7                      u445 0190  
                    u525 009E                      u390 0103                      u391 0102  
                    u375 00EB                      u480 01BB                      u385 00F7  
                    u481 01BA                      u465 01A4                      u617 02D2  
                    u490 01C0                      u491 01BF                      u475 01AF  
                    u627 020F                      u580 02B5                      u581 02B4  
                    u590 02BE                      u591 02BD                      _map 02EB  
                    _isr 0267             ___awmod@sign 0026                     l1031 0118  
                   l1111 017D                     l1103 016F                     l1041 0131  
                   l1033 011D                     l1121 0196                     l1113 0181  
                   l1105 0172                     l1043 0136                     l1035 0122  
                   l1027 0112                     l1131 01B5                     l1123 019A  
                   l1115 0186                     l1107 0176                     l1211 006B  
                   l1203 001F                     l1045 013B                     l1037 0127  
                   l1029 0113                     l1053 0147                     l1221 0221  
                   l1061 00AC                     l1125 019E                     l1117 018C  
                   l1133 01BB                     l1109 017B                     l1213 0093  
                   l1205 0027                     l1047 0140                     l1039 012C  
                   l1231 023B                     l1223 0223                     l1071 00C0  
                   l1063 00B0                     l1135 01C0                     l1127 01A8  
                   l1119 018F                     l1215 00A2                     l1207 0034  
                   l1151 01D5                     l1049 0145                     l1241 024F  
                   l1233 023F                     l1225 022C                     l1081 00D6  
                   l1073 00C4                     l1065 00B5                     l1137 01C5  
                   l1129 01AE                     l1209 005C                     l1161 01E3  
                   l1153 01D6                     l1145 01CA                     l1243 0251  
                   l1235 0241                     l1227 0230                     l1219 0220  
                   l1091 00F6                     l1083 00DA                     l1075 00C6  
                   l1067 00B7                     l1059 00A9                     l1171 01F2  
                   l1163 01E6                     l1155 01DA                     l1147 01D0  
                   l1237 024A                     l1229 0232                     l1245 0253  
                   l1093 00FD                     l1085 00DE                     l1077 00CC  
                   l1069 00BB                     l1181 0201                     l1173 01F5  
                   l1165 01E9                     l1157 01DD                     l1149 01D1  
                   l1335 025B                     l1239 024E                     l1087 00EF  
                   l1079 00CF                     l1095 0103                     l1191 0213  
                   l1183 0205                     l1175 01F9                     l1167 01EC  
                   l1159 01E0                     l1337 014E                     l1097 0108  
                   l1089 00F5                     l1193 0214                     l1185 0208  
                   l1177 01FD                     l1169 01EF                     l1281 02BE  
                   l1099 010D                     l1195 0215                     l1187 020B  
                   l1179 0200                     l1283 02C3                     l1291 02D8  
                   l1275 02AA                     l1197 0216                     l1189 0212  
                   l1293 02E1                     l1285 02CC                     l1277 02AF  
                   l1199 0219                     l1287 02CE                     l1279 02B5  
                   l1289 02D5                     ?_map 0070                     ?_isr 0070  
                   i1l71 0290                     i1l75 02A3                     i1l78 02A3  
                   i1l96 02F4                     _TMR0 0001                     _main 02AA  
                   btemp 007E                     start 000C                    ??_map 0072  
                  ??_isr 0075                    ?_main 0070          __end_of___awdiv 0112  
        __end_of___awmod 01CA                    _ANSEL 0188          ___awdiv@divisor 0020  
        ___awdiv@counter 0025                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    u53_20 026D  
                  u53_21 026C                    u54_20 0276                    u54_21 0275  
                  u55_20 0282                    u55_21 0281                    u56_20 0294  
                  u56_21 0293                    u57_20 02A1                    u57_21 02A0  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _valor 0032                    _setup 01CA  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 02EB                   ??_main 002B  
                 _ADRESH 001E         ___awdiv@dividend 0022                   ?_setup 0070  
                 _ANSELH 0189                   i1l1141 02EC                   i1l1251 0267  
                 i1l1261 028E                   i1l1253 026D                   i1l1271 02A1  
                 i1l1263 0294                   i1l1255 0276                   i1l1265 0296  
                 i1l1257 0279                   i1l1267 0297                   i1l1259 0282  
                 i1l1269 029B     obtener_decimal@valor 0029                ??___awdiv 0024  
              ??___awmod 0024         ___awdiv@quotient 0027          ___awmod@divisor 0020  
        ___awmod@counter 0025                   map@val 0074                   saved_w 007E  
__end_of__initialization 001B           __pcstackCOMMON 0070            __end_of_setup 021D  
         _OPTION_REGbits 0081                  ??_setup 0020               __pbssBANK0 002C  
             __pmaintext 02AA               __pintentry 0004                  ___awdiv 00A9  
                ___awmod 016F                  _decenas 002E                  __ptext1 01CA  
                __ptext2 001F                  __ptext3 016F                  __ptext4 00A9  
                __ptext5 021D                  __ptext6 0112                  __ptext7 0267  
                __ptext8 02EB               _tabla_7seg 0112         ___awmod@dividend 0022  
      ??_obtener_decimal 002B     end_of_initialization 001B                _PORTCbits 0007  
              _PORTDbits 0008            ?_multiplexado 0070              ?_tabla_7seg 0020  
         ??_multiplexado 0023      start_initialization 000F              __end_of_map 02F5  
            __end_of_isr 02AA              __pbssCOMMON 0078                ___latbits 0002  
          __pcstackBANK0 0020                 ?___awdiv 0020                 ?___awmod 0020  
        _obtener_decimal 001F        interrupt_function 0004                 _PIE1bits 008C  
   __end_of_multiplexado 0267                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F        tabla_7seg@decimal 0020  __end_of_obtener_decimal 00A9  
           ??_tabla_7seg 0022                 _centenas 002C       __end_of_tabla_7seg 016F  
               _selector 0078                 _unidades 0030               _INTCONbits 000B  
   multiplexado@selector 0025                 intlevel1 0000               _OSCCONbits 008F  
       ?_obtener_decimal 0029              _valor_tabla 0034             _multiplexado 021D  
